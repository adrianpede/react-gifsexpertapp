{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGriditem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGriditem","className","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","useFetchGifs","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"mMAGaA,EAAc,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAEzB,EAAoCC,mBAAS,IAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KAkBA,OAEI,sBAAMC,SAbW,SAACC,GAClBA,EAAEC,iBAGAJ,EAAWK,OAAOC,OAAO,IAC3BR,GAAc,SAAAS,GAAI,OAAKP,GAAL,mBAAmBO,OACrCN,EAAc,MAOd,SACA,uBACIO,KAAK,OACLC,MAAOT,EACPU,SAtBkB,SAACP,GAEvBF,EAAcE,EAAEQ,OAAOF,a,+BCRlBG,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DACTC,EADS,0DACgDC,UAAUH,GAD1D,sDAEII,MAAMF,GAFV,cAETG,EAFS,gBAGMA,EAAKC,OAHX,uBAGRC,EAHQ,EAGRA,KAEDC,EAAOD,EAAKE,KAAK,SAAAC,GAAO,IAAD,EACzB,MAAO,CACHC,GAAGD,EAAIC,GACPC,MAAMF,EAAIE,MACVV,IAAG,UAACQ,EAAIG,cAAL,aAAC,EAAYC,iBAAiBZ,QAT1B,kBAaRM,GAbQ,4CAAH,sDCCPO,EAAc,SAAC,GAAmB,IAAjBH,EAAgB,EAAhBA,MAAOV,EAAS,EAATA,IAEjC,OACI,sBAAKc,UAAU,yCAAf,UACI,qBAAKC,IAAKf,EAAKgB,IAAKN,IACpB,4BAAIA,QCFHO,EAAU,SAAC,GAAgB,IAAfnB,EAAc,EAAdA,SAEtB,ECHyB,SAACA,GACzB,MAA0Bd,mBAAS,CAC/BqB,KAAM,GACNa,SAAS,IAFb,mBAAOC,EAAP,KAAcC,EAAd,KAiBA,OAZAC,qBAAW,WACPxB,EAAQC,GACPwB,MAAM,SAAAC,GACJH,EAAS,CACLf,KAAMkB,EACNL,SAAS,SAKjB,CAACpB,IAEGqB,EDfwBK,CAAa1B,GAAjCa,EAAZ,EAAON,KAAca,EAArB,EAAqBA,QAGpB,OACI,qCACA,oBAAIJ,UAAU,yCAAd,SAAwDhB,IACvDoB,GAAW,mBAAGJ,UAAU,wCAAb,qBAEZ,qBAAKA,UAAU,YAAf,SAGWH,EAAOJ,KAAM,SAAAC,GAAG,OACX,cAAC,EAAD,eAEIA,GADCA,EAAIC,aEfpBgB,EAAe,WAExB,MAAoCzC,mBAAS,CAAC,cAA9C,mBAAO0C,EAAP,KAAmB3C,EAAnB,KAGA,OACI,qCACI,8CACA,cAAC,EAAD,CAAaA,cAAeA,IAC5B,uBAEA,6BAEQ2C,EAAWnB,KAAK,SAAAT,GAAQ,OACvB,cAAC,EAAD,CAEAA,SAAUA,GADLA,Y,MCZ1B6B,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.04bf8407.chunk.js","sourcesContent":["import React, {useState} from 'react'\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const AddCategory = ({setCategories}) => {\r\n\r\n    const [inputValue, setInputValue] = useState('');\r\n\r\n    const handleInputChange = (e) =>{\r\n       // console.log(e.target.value);\r\n        setInputValue(e.target.value);\r\n    }\r\n\r\n    const handleSubmit = (e)=> {\r\n        e.preventDefault();\r\n       // console.log('submit hecho')\r\n       \r\n       if(inputValue.trim().length>2) {\r\n        setCategories(cats => [inputValue,...cats]);\r\n        setInputValue('');\r\n\r\n       }\r\n\r\n    }\r\n    return (\r\n        \r\n        <form onSubmit={handleSubmit}>\r\n        <input\r\n            type=\"text\"\r\n            value={inputValue}\r\n            onChange={handleInputChange}\r\n            />\r\n        </form>\r\n            \r\n            \r\n        \r\n    )\r\n}\r\n\r\nAddCategory.propTypes = {\r\n    setCategories:PropTypes.func.isRequired\r\n}","\r\nexport const getGifs = async (category) => {\r\n        const url = `https://api.giphy.com/v1/gifs/search?limit=10&q=${encodeURI(category)}&api_key=6eMCnxq980EHQ2bseRO6vff1bVgE6CDr`\r\n        const resp = await fetch(url);\r\n        const {data} = await resp.json();\r\n\r\n        const gifs = data.map( img =>{\r\n            return {\r\n                id:img.id,\r\n                title:img.title,\r\n                url:img.images?.downsized_medium.url\r\n            }\r\n        })\r\n\r\n        return gifs; \r\n\r\n\r\n    }\r\n    ","import React from 'react'\r\n\r\nexport const GifGriditem = ({ title, url}) => {\r\n   // console.log(id, title, url);\r\n    return (\r\n        <div className=\"card animate__animated animate__fadeIn\">\r\n            <img src={url} alt={title}/>\r\n            <p>{title}</p>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport { useFetchGifs } from '../hooks/useFetchGifs';\r\nimport { GifGriditem } from './GifGriditem';\r\n\r\n\r\nexport const GifGrid = ({category}) => {\r\n  \r\n   const {data:images , loading} = useFetchGifs(category);    \r\n \r\n    \r\n    return (\r\n        <> \r\n        <h3 className=\"card animate__animated animate__fadeIn\">{category}</h3>\r\n        {loading && <p className=\"card animate__animated animate__flash\">Loading</p>}\r\n        \r\n        <div className=\"card-grid\">            \r\n            \r\n                 {\r\n                   images.map(  img => (\r\n                        <GifGriditem \r\n                        key={img.id}\r\n                        {...img}\r\n                        />\r\n                   ))\r\n               }\r\n            \r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\n\r\n","import { useEffect, useState } from \"react\"\r\nimport { getGifs } from \"../helpers/getGifs\";\r\n\r\n\r\nexport const useFetchGifs = (category)=>{\r\n    const [state, setState] = useState({\r\n        data: [],\r\n        loading: true\r\n    });\r\n    \r\n    useEffect( ()=>{\r\n        getGifs(category)\r\n        .then( imgs =>{  \r\n           setState({\r\n               data: imgs,\r\n               loading: false\r\n           });\r\n            \r\n        })\r\n\r\n    }, [category])\r\n    \r\n    return state;\r\n}","\r\nimport React, { useState } from 'react'\r\nimport { AddCategory } from './components/AddCategory';\r\nimport { GifGrid } from './components/GifGrid';\r\n\r\nexport const GifExpertApp = () => {\r\n   \r\n    const [categories, setCategories] = useState(['One Punch']);    \r\n\r\n\r\n    return (\r\n        <>\r\n            <h2>GifExpertApp</h2>\r\n            <AddCategory setCategories={setCategories}/>\r\n            <hr/>\r\n            \r\n            <ol>\r\n                {\r\n                    categories.map( category  => (\r\n                     <GifGrid\r\n                     key={category}\r\n                     category={category}\r\n                     />\r\n                    ))          \r\n                }\r\n            </ol>\r\n        </>\r\n    )\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { GifExpertApp } from './GifExpertApp';\n\nimport './index.css';\n\n\n\nReactDOM.render(  \n  <GifExpertApp />,  \n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n\n"],"sourceRoot":""}